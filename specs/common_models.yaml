openapi: 3.0.0
info:
  title: Common Brokerage API Models
  version: 1.0.0
  description: |
    Common models for interacting with brokerage APIs in an agnostic way. These models are designed to be mapped to specific broker implementations (e.g., Alpaca, Interactive Brokers, etc.) and can be used at the service or application layer.

components:
  schemas:
    Account:
      type: object
      description: Generic brokerage account information
      properties:
        id:
          oneOf:
            - type: string
            - type: string
              format: uuid
          description: Unique account identifier (string or UUID)
        status:
          type: string
          description: Account status (e.g., ACTIVE, SUSPENDED, CLOSED)
        currency:
          type: string
          description: Account currency (e.g., USD)
        cash:
          type: number
          description: Cash balance
        equity:
          type: number
          description: Total equity value
        buying_power:
          type: number
          description: Buying power available
        created_at:
          type: string
          format: date-time
          description: Account creation timestamp
      required:
        - id
        - status
        - currency
        - cash
        - equity
        - buying_power

    FieldMap:
      type: object
      description: Generic mapping from common model fields to brokerage-specific fields
      properties:
        mapping:
          type: object
          additionalProperties:
            type: string
          description: |
            Dictionary where keys are common model field names and values are the corresponding brokerage API field names.
      required:
        - mapping

    OrderSide:
      type: string
      description: Side of the order
      enum: [buy, sell]

    OrderType:
      type: string
      description: Type of the order
      enum: [market, limit, stop, stop_limit, trailing_stop]

    TimeInForce:
      type: string
      description: Time in force for the order
      enum: [day, gtc, opg, cls, ioc, fok]

    OrderClass:
      type: string
      description: Order class
      enum: [simple, bracket, oto, oco]

    OrderRequest:
      type: object
      description: High-level metadata describing an order request, to be processed by a brokerage API.
      properties:
        symbol:
          type: string
          description: Ticker symbol for the asset to trade
        side:
          $ref: '#/components/schemas/OrderSide'
        type:
          $ref: '#/components/schemas/OrderType'
        qty:
          type: number
          description: Quantity of asset to trade
        time_in_force:
          $ref: '#/components/schemas/TimeInForce'
        order_class:
          $ref: '#/components/schemas/OrderClass'
        limit_price:
          type: number
          description: Limit price for limit or take-profit orders
        stop_price:
          type: number
          description: Stop price for stop or stop-loss orders
        take_profit_price:
          type: number
          description: Take profit price for bracket orders
        stop_loss_price:
          type: number
          description: Stop loss price for bracket orders
        client_order_id:
          type: string
          description: Optional client-provided order identifier
        metadata:
          type: object
          additionalProperties: true
          description: Arbitrary metadata for the order request
      required:
        - symbol
        - side
        - type
        - qty

    Position:
      type: object
      description: Generic open position model, broker-agnostic.
      properties:
        vendor_asset_id:
          type: string
          format: uuid
          description: Unique asset identifier
        symbol:
          type: string
          description: Ticker symbol
        exchange:
          type: string
          description: Exchange where the asset is traded
        asset_class:
          type: string
          description: Asset class (e.g., us_equity)
        qty:
          type: number
          description: Quantity held
        qty_available:
          type: number
          description: Quantity available to trade
        side:
          type: string
          enum: [long, short]
          description: Position side
        avg_entry_price:
          type: number
          description: Average entry price
        market_value:
          type: number
          description: Current market value of the position
        cost_basis:
          type: number
          description: Cost basis of the position
        unrealized_pl:
          type: number
          description: Unrealized profit/loss
        unrealized_plpc:
          type: number
          description: Unrealized profit/loss percent (decimal, e.g., 0.05 for 5%)
        unrealized_intraday_pl:
          type: number
          description: Unrealized intraday profit/loss
        unrealized_intraday_plpc:
          type: number
          description: Unrealized intraday profit/loss percent
        current_price:
          type: number
          description: Current price of the asset
        lastday_price:
          type: number
          description: Previous day's closing price
        change_today:
          type: number
          description: Percent change from previous close (decimal, e.g., -0.01 for -1%)
        asset_marginable:
          type: boolean
          description: Whether the asset is marginable
      required:
        - asset_id
        - symbol
        - qty
        - side
        - avg_entry_price
        - market_value
        - unrealized_pl

    Bar:
      type: object
      description: OHLCV bar for a symbol
      properties:
        t:
          type: string
          format: date-time
        o:
          type: number
        h:
          type: number
        l:
          type: number
        c:
          type: number
        v:
          type: number
      required:
        - t
        - o
        - h
        - l
        - c
        - v

    Trade:
      type: object
      description: Trade print for a symbol
      properties:
        t:
          type: string
          format: date-time
        p:
          type: number
        s:
          type: number
        i:
          type: string
          description: Trade ID
      required:
        - t
        - p
        - s
        - i

    BarRequest:
      type: object
      description: Request parameters for fetching OHLCV bars
      properties:
        symbol:
          type: string
          description: Ticker symbol
        timeframe:
          type: string
          enum: [1m, 5m, 15m, 30m, 1h, 4h, 1D]
          description: Timeframe for the bars
        start:
          type: string
          format: date-time
          description: Start time for the bar data
        end:
          type: string
          format: date-time
          description: End time for the bar data
      required:
        - symbol
        - timeframe
